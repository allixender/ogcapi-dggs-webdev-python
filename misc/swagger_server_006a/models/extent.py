# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dggs_api_server.models.base_model_ import Model
from dggs_api_server.models.spatial_extent import SpatialExtent  # noqa: F401,E501
from dggs_api_server.models.temporal_extent import TemporalExtent  # noqa: F401,E501
from dggs_api_server import util


class Extent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, spatial: SpatialExtent=None, temporal: TemporalExtent=None):  # noqa: E501
        """Extent - a model defined in Swagger

        :param spatial: The spatial of this Extent.  # noqa: E501
        :type spatial: SpatialExtent
        :param temporal: The temporal of this Extent.  # noqa: E501
        :type temporal: TemporalExtent
        """
        self.swagger_types = {
            'spatial': SpatialExtent,
            'temporal': TemporalExtent
        }

        self.attribute_map = {
            'spatial': 'spatial',
            'temporal': 'temporal'
        }
        self._spatial = spatial
        self._temporal = temporal

    @classmethod
    def from_dict(cls, dikt) -> 'Extent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The extent of this Extent.  # noqa: E501
        :rtype: Extent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def spatial(self) -> SpatialExtent:
        """Gets the spatial of this Extent.


        :return: The spatial of this Extent.
        :rtype: SpatialExtent
        """
        return self._spatial

    @spatial.setter
    def spatial(self, spatial: SpatialExtent):
        """Sets the spatial of this Extent.


        :param spatial: The spatial of this Extent.
        :type spatial: SpatialExtent
        """

        self._spatial = spatial

    @property
    def temporal(self) -> TemporalExtent:
        """Gets the temporal of this Extent.


        :return: The temporal of this Extent.
        :rtype: TemporalExtent
        """
        return self._temporal

    @temporal.setter
    def temporal(self, temporal: TemporalExtent):
        """Sets the temporal of this Extent.


        :param temporal: The temporal of this Extent.
        :type temporal: TemporalExtent
        """

        self._temporal = temporal
