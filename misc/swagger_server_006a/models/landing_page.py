# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dggs_api_server.models.base_model_ import Model
from dggs_api_server.models.landing_page1 import LandingPage1  # noqa: F401,E501
from dggs_api_server.models.landing_page_link import LandingPageLink  # noqa: F401,E501
from dggs_api_server.models.link import Link  # noqa: F401,E501
from dggs_api_server import util


class LandingPage(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, links: List[Link]=None, title: str=None, description: str=None):  # noqa: E501
        """LandingPage - a model defined in Swagger

        :param links: The links of this LandingPage.  # noqa: E501
        :type links: List[Link]
        :param title: The title of this LandingPage.  # noqa: E501
        :type title: str
        :param description: The description of this LandingPage.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'links': List[Link],
            'title': str,
            'description': str
        }

        self.attribute_map = {
            'links': 'links',
            'title': 'title',
            'description': 'description'
        }
        self._links = links
        self._title = title
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'LandingPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The landingPage of this LandingPage.  # noqa: E501
        :rtype: LandingPage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self) -> List[Link]:
        """Gets the links of this LandingPage.


        :return: The links of this LandingPage.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links: List[Link]):
        """Sets the links of this LandingPage.


        :param links: The links of this LandingPage.
        :type links: List[Link]
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    @property
    def title(self) -> str:
        """Gets the title of this LandingPage.


        :return: The title of this LandingPage.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this LandingPage.


        :param title: The title of this LandingPage.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this LandingPage.


        :return: The description of this LandingPage.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this LandingPage.


        :param description: The description of this LandingPage.
        :type description: str
        """

        self._description = description
