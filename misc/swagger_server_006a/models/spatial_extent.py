# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dggs_api_server.models.base_model_ import Model
from dggs_api_server.models.bbox import Bbox  # noqa: F401,E501
from dggs_api_server.models.crs import Crs  # noqa: F401,E501
from dggs_api_server import util


class SpatialExtent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, bbox: Bbox=None, crs: Crs=None):  # noqa: E501
        """SpatialExtent - a model defined in Swagger

        :param bbox: The bbox of this SpatialExtent.  # noqa: E501
        :type bbox: Bbox
        :param crs: The crs of this SpatialExtent.  # noqa: E501
        :type crs: Crs
        """
        self.swagger_types = {
            'bbox': Bbox,
            'crs': Crs
        }

        self.attribute_map = {
            'bbox': 'bbox',
            'crs': 'crs'
        }
        self._bbox = bbox
        self._crs = crs

    @classmethod
    def from_dict(cls, dikt) -> 'SpatialExtent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The spatialExtent of this SpatialExtent.  # noqa: E501
        :rtype: SpatialExtent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bbox(self) -> Bbox:
        """Gets the bbox of this SpatialExtent.


        :return: The bbox of this SpatialExtent.
        :rtype: Bbox
        """
        return self._bbox

    @bbox.setter
    def bbox(self, bbox: Bbox):
        """Sets the bbox of this SpatialExtent.


        :param bbox: The bbox of this SpatialExtent.
        :type bbox: Bbox
        """
        if bbox is None:
            raise ValueError("Invalid value for `bbox`, must not be `None`")  # noqa: E501

        self._bbox = bbox

    @property
    def crs(self) -> Crs:
        """Gets the crs of this SpatialExtent.


        :return: The crs of this SpatialExtent.
        :rtype: Crs
        """
        return self._crs

    @crs.setter
    def crs(self, crs: Crs):
        """Sets the crs of this SpatialExtent.


        :param crs: The crs of this SpatialExtent.
        :type crs: Crs
        """

        self._crs = crs
