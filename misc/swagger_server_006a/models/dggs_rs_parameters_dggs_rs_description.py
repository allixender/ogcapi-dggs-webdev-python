# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dggs_api_server.models.base_model_ import Model
from dggs_api_server import util


class DggsRsParametersDggsRsDescription(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, dggs_rs_id: str=None, source: List[str]=None):  # noqa: E501
        """DggsRsParametersDggsRsDescription - a model defined in Swagger

        :param title: The title of this DggsRsParametersDggsRsDescription.  # noqa: E501
        :type title: str
        :param dggs_rs_id: The dggs_rs_id of this DggsRsParametersDggsRsDescription.  # noqa: E501
        :type dggs_rs_id: str
        :param source: The source of this DggsRsParametersDggsRsDescription.  # noqa: E501
        :type source: List[str]
        """
        self.swagger_types = {
            'title': str,
            'dggs_rs_id': str,
            'source': List[str]
        }

        self.attribute_map = {
            'title': 'title',
            'dggs_rs_id': 'dggsRsId',
            'source': 'source'
        }
        self._title = title
        self._dggs_rs_id = dggs_rs_id
        self._source = source

    @classmethod
    def from_dict(cls, dikt) -> 'DggsRsParametersDggsRsDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The dggsRsParameters_dggsRsDescription of this DggsRsParametersDggsRsDescription.  # noqa: E501
        :rtype: DggsRsParametersDggsRsDescription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this DggsRsParametersDggsRsDescription.

        Title of this DGGS_RS Instance  # noqa: E501

        :return: The title of this DggsRsParametersDggsRsDescription.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this DggsRsParametersDggsRsDescription.

        Title of this DGGS_RS Instance  # noqa: E501

        :param title: The title of this DggsRsParametersDggsRsDescription.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")  # noqa: E501

        self._title = title

    @property
    def dggs_rs_id(self) -> str:
        """Gets the dggs_rs_id of this DggsRsParametersDggsRsDescription.

        Formal Identifier for this DGGS_RS Instance  # noqa: E501

        :return: The dggs_rs_id of this DggsRsParametersDggsRsDescription.
        :rtype: str
        """
        return self._dggs_rs_id

    @dggs_rs_id.setter
    def dggs_rs_id(self, dggs_rs_id: str):
        """Sets the dggs_rs_id of this DggsRsParametersDggsRsDescription.

        Formal Identifier for this DGGS_RS Instance  # noqa: E501

        :param dggs_rs_id: The dggs_rs_id of this DggsRsParametersDggsRsDescription.
        :type dggs_rs_id: str
        """
        if dggs_rs_id is None:
            raise ValueError("Invalid value for `dggs_rs_id`, must not be `None`")  # noqa: E501

        self._dggs_rs_id = dggs_rs_id

    @property
    def source(self) -> List[str]:
        """Gets the source of this DggsRsParametersDggsRsDescription.

        source to the technical specification of this family of DGGS  # noqa: E501

        :return: The source of this DggsRsParametersDggsRsDescription.
        :rtype: List[str]
        """
        return self._source

    @source.setter
    def source(self, source: List[str]):
        """Sets the source of this DggsRsParametersDggsRsDescription.

        source to the technical specification of this family of DGGS  # noqa: E501

        :param source: The source of this DggsRsParametersDggsRsDescription.
        :type source: List[str]
        """
        if source is None:
            raise ValueError("Invalid value for `source`, must not be `None`")  # noqa: E501

        self._source = source
