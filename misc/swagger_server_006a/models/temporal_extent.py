# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dggs_api_server.models.base_model_ import Model
from dggs_api_server.models.temporal_interval import TemporalInterval  # noqa: F401,E501
from dggs_api_server.models.trs import Trs  # noqa: F401,E501
from dggs_api_server import util


class TemporalExtent(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, interval: TemporalInterval=None, trs: Trs=None):  # noqa: E501
        """TemporalExtent - a model defined in Swagger

        :param interval: The interval of this TemporalExtent.  # noqa: E501
        :type interval: TemporalInterval
        :param trs: The trs of this TemporalExtent.  # noqa: E501
        :type trs: Trs
        """
        self.swagger_types = {
            'interval': TemporalInterval,
            'trs': Trs
        }

        self.attribute_map = {
            'interval': 'interval',
            'trs': 'trs'
        }
        self._interval = interval
        self._trs = trs

    @classmethod
    def from_dict(cls, dikt) -> 'TemporalExtent':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The temporalExtent of this TemporalExtent.  # noqa: E501
        :rtype: TemporalExtent
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self) -> TemporalInterval:
        """Gets the interval of this TemporalExtent.


        :return: The interval of this TemporalExtent.
        :rtype: TemporalInterval
        """
        return self._interval

    @interval.setter
    def interval(self, interval: TemporalInterval):
        """Sets the interval of this TemporalExtent.


        :param interval: The interval of this TemporalExtent.
        :type interval: TemporalInterval
        """

        self._interval = interval

    @property
    def trs(self) -> Trs:
        """Gets the trs of this TemporalExtent.


        :return: The trs of this TemporalExtent.
        :rtype: Trs
        """
        return self._trs

    @trs.setter
    def trs(self, trs: Trs):
        """Sets the trs of this TemporalExtent.


        :param trs: The trs of this TemporalExtent.
        :type trs: Trs
        """

        self._trs = trs
