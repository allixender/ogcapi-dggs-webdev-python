# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from dggs_api_server.models.base_model_ import Model
from dggs_api_server.models.dggs_rs_parameters_dggs_rs_description import DggsRsParametersDggsRsDescription  # noqa: F401,E501
from dggs_api_server.models.dggs_rs_parameters_dggs_rs_structure import DggsRsParametersDggsRsStructure  # noqa: F401,E501
from dggs_api_server.models.dggs_rs_zone_class import DggsRsZoneClass  # noqa: F401,E501
from dggs_api_server.models.link import Link  # noqa: F401,E501
from dggs_api_server import util


class DggsRsParameters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, dggs_rs_description: DggsRsParametersDggsRsDescription=None, dggs_rs_structure: DggsRsParametersDggsRsStructure=None, dggs_rs_zone_classes: List[DggsRsZoneClass]=None, links: List[Link]=None):  # noqa: E501
        """DggsRsParameters - a model defined in Swagger

        :param dggs_rs_description: The dggs_rs_description of this DggsRsParameters.  # noqa: E501
        :type dggs_rs_description: DggsRsParametersDggsRsDescription
        :param dggs_rs_structure: The dggs_rs_structure of this DggsRsParameters.  # noqa: E501
        :type dggs_rs_structure: DggsRsParametersDggsRsStructure
        :param dggs_rs_zone_classes: The dggs_rs_zone_classes of this DggsRsParameters.  # noqa: E501
        :type dggs_rs_zone_classes: List[DggsRsZoneClass]
        :param links: The links of this DggsRsParameters.  # noqa: E501
        :type links: List[Link]
        """
        self.swagger_types = {
            'dggs_rs_description': DggsRsParametersDggsRsDescription,
            'dggs_rs_structure': DggsRsParametersDggsRsStructure,
            'dggs_rs_zone_classes': List[DggsRsZoneClass],
            'links': List[Link]
        }

        self.attribute_map = {
            'dggs_rs_description': 'dggsRsDescription',
            'dggs_rs_structure': 'dggsRsStructure',
            'dggs_rs_zone_classes': 'dggsRsZoneClasses',
            'links': 'links'
        }
        self._dggs_rs_description = dggs_rs_description
        self._dggs_rs_structure = dggs_rs_structure
        self._dggs_rs_zone_classes = dggs_rs_zone_classes
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'DggsRsParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The dggsRsParameters of this DggsRsParameters.  # noqa: E501
        :rtype: DggsRsParameters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dggs_rs_description(self) -> DggsRsParametersDggsRsDescription:
        """Gets the dggs_rs_description of this DggsRsParameters.


        :return: The dggs_rs_description of this DggsRsParameters.
        :rtype: DggsRsParametersDggsRsDescription
        """
        return self._dggs_rs_description

    @dggs_rs_description.setter
    def dggs_rs_description(self, dggs_rs_description: DggsRsParametersDggsRsDescription):
        """Sets the dggs_rs_description of this DggsRsParameters.


        :param dggs_rs_description: The dggs_rs_description of this DggsRsParameters.
        :type dggs_rs_description: DggsRsParametersDggsRsDescription
        """
        if dggs_rs_description is None:
            raise ValueError("Invalid value for `dggs_rs_description`, must not be `None`")  # noqa: E501

        self._dggs_rs_description = dggs_rs_description

    @property
    def dggs_rs_structure(self) -> DggsRsParametersDggsRsStructure:
        """Gets the dggs_rs_structure of this DggsRsParameters.


        :return: The dggs_rs_structure of this DggsRsParameters.
        :rtype: DggsRsParametersDggsRsStructure
        """
        return self._dggs_rs_structure

    @dggs_rs_structure.setter
    def dggs_rs_structure(self, dggs_rs_structure: DggsRsParametersDggsRsStructure):
        """Sets the dggs_rs_structure of this DggsRsParameters.


        :param dggs_rs_structure: The dggs_rs_structure of this DggsRsParameters.
        :type dggs_rs_structure: DggsRsParametersDggsRsStructure
        """
        if dggs_rs_structure is None:
            raise ValueError("Invalid value for `dggs_rs_structure`, must not be `None`")  # noqa: E501

        self._dggs_rs_structure = dggs_rs_structure

    @property
    def dggs_rs_zone_classes(self) -> List[DggsRsZoneClass]:
        """Gets the dggs_rs_zone_classes of this DggsRsParameters.

        DGGS_RS  Heirarchy of Zone Classes for the selected DGGS implementation.  # noqa: E501

        :return: The dggs_rs_zone_classes of this DggsRsParameters.
        :rtype: List[DggsRsZoneClass]
        """
        return self._dggs_rs_zone_classes

    @dggs_rs_zone_classes.setter
    def dggs_rs_zone_classes(self, dggs_rs_zone_classes: List[DggsRsZoneClass]):
        """Sets the dggs_rs_zone_classes of this DggsRsParameters.

        DGGS_RS  Heirarchy of Zone Classes for the selected DGGS implementation.  # noqa: E501

        :param dggs_rs_zone_classes: The dggs_rs_zone_classes of this DggsRsParameters.
        :type dggs_rs_zone_classes: List[DggsRsZoneClass]
        """
        if dggs_rs_zone_classes is None:
            raise ValueError("Invalid value for `dggs_rs_zone_classes`, must not be `None`")  # noqa: E501

        self._dggs_rs_zone_classes = dggs_rs_zone_classes

    @property
    def links(self) -> List[Link]:
        """Gets the links of this DggsRsParameters.

        List of links associated with this OGC API DGGS Resource  # noqa: E501

        :return: The links of this DggsRsParameters.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links: List[Link]):
        """Sets the links of this DggsRsParameters.

        List of links associated with this OGC API DGGS Resource  # noqa: E501

        :param links: The links of this DggsRsParameters.
        :type links: List[Link]
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links
