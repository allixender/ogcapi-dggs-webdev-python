--- swagger_server_006/models/link.py	2021-10-18 14:13:46.820593800 +0300
+++ dggs_api_server_004/models/link.py	2021-10-14 16:15:08.098386300 +0300
@@ -1,194 +1,194 @@
-# coding: utf-8
-
-from __future__ import absolute_import
-from datetime import date, datetime  # noqa: F401
-
-from typing import List, Dict  # noqa: F401
-
-from swagger_server.models.base_model_ import Model
-from swagger_server import util
-
-
-class Link(Model):
-    """NOTE: This class is auto generated by the swagger code generator program.
-
-    Do not edit the class manually.
-    """
-    def __init__(self, href: str=None, rel: str=None, type: str=None, hreflang: str=None, title: str=None, length: int=None):  # noqa: E501
-        """Link - a model defined in Swagger
-
-        :param href: The href of this Link.  # noqa: E501
-        :type href: str
-        :param rel: The rel of this Link.  # noqa: E501
-        :type rel: str
-        :param type: The type of this Link.  # noqa: E501
-        :type type: str
-        :param hreflang: The hreflang of this Link.  # noqa: E501
-        :type hreflang: str
-        :param title: The title of this Link.  # noqa: E501
-        :type title: str
-        :param length: The length of this Link.  # noqa: E501
-        :type length: int
-        """
-        self.swagger_types = {
-            'href': str,
-            'rel': str,
-            'type': str,
-            'hreflang': str,
-            'title': str,
-            'length': int
-        }
-
-        self.attribute_map = {
-            'href': 'href',
-            'rel': 'rel',
-            'type': 'type',
-            'hreflang': 'hreflang',
-            'title': 'title',
-            'length': 'length'
-        }
-        self._href = href
-        self._rel = rel
-        self._type = type
-        self._hreflang = hreflang
-        self._title = title
-        self._length = length
-
-    @classmethod
-    def from_dict(cls, dikt) -> 'Link':
-        """Returns the dict as a model
-
-        :param dikt: A dict.
-        :type: dict
-        :return: The link of this Link.  # noqa: E501
-        :rtype: Link
-        """
-        return util.deserialize_model(dikt, cls)
-
-    @property
-    def href(self) -> str:
-        """Gets the href of this Link.
-
-
-        :return: The href of this Link.
-        :rtype: str
-        """
-        return self._href
-
-    @href.setter
-    def href(self, href: str):
-        """Sets the href of this Link.
-
-
-        :param href: The href of this Link.
-        :type href: str
-        """
-        if href is None:
-            raise ValueError("Invalid value for `href`, must not be `None`")  # noqa: E501
-
-        self._href = href
-
-    @property
-    def rel(self) -> str:
-        """Gets the rel of this Link.
-
-
-        :return: The rel of this Link.
-        :rtype: str
-        """
-        return self._rel
-
-    @rel.setter
-    def rel(self, rel: str):
-        """Sets the rel of this Link.
-
-
-        :param rel: The rel of this Link.
-        :type rel: str
-        """
-
-        self._rel = rel
-
-    @property
-    def type(self) -> str:
-        """Gets the type of this Link.
-
-
-        :return: The type of this Link.
-        :rtype: str
-        """
-        return self._type
-
-    @type.setter
-    def type(self, type: str):
-        """Sets the type of this Link.
-
-
-        :param type: The type of this Link.
-        :type type: str
-        """
-
-        self._type = type
-
-    @property
-    def hreflang(self) -> str:
-        """Gets the hreflang of this Link.
-
-
-        :return: The hreflang of this Link.
-        :rtype: str
-        """
-        return self._hreflang
-
-    @hreflang.setter
-    def hreflang(self, hreflang: str):
-        """Sets the hreflang of this Link.
-
-
-        :param hreflang: The hreflang of this Link.
-        :type hreflang: str
-        """
-
-        self._hreflang = hreflang
-
-    @property
-    def title(self) -> str:
-        """Gets the title of this Link.
-
-
-        :return: The title of this Link.
-        :rtype: str
-        """
-        return self._title
-
-    @title.setter
-    def title(self, title: str):
-        """Sets the title of this Link.
-
-
-        :param title: The title of this Link.
-        :type title: str
-        """
-
-        self._title = title
-
-    @property
-    def length(self) -> int:
-        """Gets the length of this Link.
-
-
-        :return: The length of this Link.
-        :rtype: int
-        """
-        return self._length
-
-    @length.setter
-    def length(self, length: int):
-        """Sets the length of this Link.
-
-
-        :param length: The length of this Link.
-        :type length: int
-        """
-
-        self._length = length
+# coding: utf-8
+
+from __future__ import absolute_import
+from datetime import date, datetime  # noqa: F401
+
+from typing import List, Dict  # noqa: F401
+
+from dggs_api_server.models.base_model_ import Model
+from dggs_api_server import util
+
+
+class Link(Model):
+    """NOTE: This class is auto generated by the swagger code generator program.
+
+    Do not edit the class manually.
+    """
+    def __init__(self, href: str=None, rel: str=None, type: str=None, hreflang: str=None, title: str=None, length: int=None):  # noqa: E501
+        """Link - a model defined in Swagger
+
+        :param href: The href of this Link.  # noqa: E501
+        :type href: str
+        :param rel: The rel of this Link.  # noqa: E501
+        :type rel: str
+        :param type: The type of this Link.  # noqa: E501
+        :type type: str
+        :param hreflang: The hreflang of this Link.  # noqa: E501
+        :type hreflang: str
+        :param title: The title of this Link.  # noqa: E501
+        :type title: str
+        :param length: The length of this Link.  # noqa: E501
+        :type length: int
+        """
+        self.swagger_types = {
+            'href': str,
+            'rel': str,
+            'type': str,
+            'hreflang': str,
+            'title': str,
+            'length': int
+        }
+
+        self.attribute_map = {
+            'href': 'href',
+            'rel': 'rel',
+            'type': 'type',
+            'hreflang': 'hreflang',
+            'title': 'title',
+            'length': 'length'
+        }
+        self._href = href
+        self._rel = rel
+        self._type = type
+        self._hreflang = hreflang
+        self._title = title
+        self._length = length
+
+    @classmethod
+    def from_dict(cls, dikt) -> 'Link':
+        """Returns the dict as a model
+
+        :param dikt: A dict.
+        :type: dict
+        :return: The link of this Link.  # noqa: E501
+        :rtype: Link
+        """
+        return util.deserialize_model(dikt, cls)
+
+    @property
+    def href(self) -> str:
+        """Gets the href of this Link.
+
+
+        :return: The href of this Link.
+        :rtype: str
+        """
+        return self._href
+
+    @href.setter
+    def href(self, href: str):
+        """Sets the href of this Link.
+
+
+        :param href: The href of this Link.
+        :type href: str
+        """
+        if href is None:
+            raise ValueError("Invalid value for `href`, must not be `None`")  # noqa: E501
+
+        self._href = href
+
+    @property
+    def rel(self) -> str:
+        """Gets the rel of this Link.
+
+
+        :return: The rel of this Link.
+        :rtype: str
+        """
+        return self._rel
+
+    @rel.setter
+    def rel(self, rel: str):
+        """Sets the rel of this Link.
+
+
+        :param rel: The rel of this Link.
+        :type rel: str
+        """
+
+        self._rel = rel
+
+    @property
+    def type(self) -> str:
+        """Gets the type of this Link.
+
+
+        :return: The type of this Link.
+        :rtype: str
+        """
+        return self._type
+
+    @type.setter
+    def type(self, type: str):
+        """Sets the type of this Link.
+
+
+        :param type: The type of this Link.
+        :type type: str
+        """
+
+        self._type = type
+
+    @property
+    def hreflang(self) -> str:
+        """Gets the hreflang of this Link.
+
+
+        :return: The hreflang of this Link.
+        :rtype: str
+        """
+        return self._hreflang
+
+    @hreflang.setter
+    def hreflang(self, hreflang: str):
+        """Sets the hreflang of this Link.
+
+
+        :param hreflang: The hreflang of this Link.
+        :type hreflang: str
+        """
+
+        self._hreflang = hreflang
+
+    @property
+    def title(self) -> str:
+        """Gets the title of this Link.
+
+
+        :return: The title of this Link.
+        :rtype: str
+        """
+        return self._title
+
+    @title.setter
+    def title(self, title: str):
+        """Sets the title of this Link.
+
+
+        :param title: The title of this Link.
+        :type title: str
+        """
+
+        self._title = title
+
+    @property
+    def length(self) -> int:
+        """Gets the length of this Link.
+
+
+        :return: The length of this Link.
+        :rtype: int
+        """
+        return self._length
+
+    @length.setter
+    def length(self, length: int):
+        """Sets the length of this Link.
+
+
+        :param length: The length of this Link.
+        :type length: int
+        """
+
+        self._length = length
